[tox]
minversion = 3.14.0
ignore_basepython_conflict = true
# these are the environments that will run when you
# execute `tox` in the command-line
# bellow you will find explanations for all environments
envlist =
    build
    docs
    py37
    py38
    py39
    py310
    py311

# helps runnings tox with github actions
# from: https://github.com/ymyzk/tox-gh-actions
[gh-actions]
python = 
    3.7: py37
    3.8: py38, build, docs
    3.9: py39
    3.10: py310
    3.11: py311
# configures which environments run with each python version
[testenv]
basepython =
    {py37}: {env:TOXPYTHON:python3.7}
    {py38,docs}: {env:TOXPYTHON:python3.8}
    {py39}: {env:TOXPYTHON:python3.9}
    {py310}: {env:TOXPYTHON:python3.10}
    {py311}: {env:TOXPYTHON:python3.11}
    {build,prreqs,lint,radon,safety}: {env:TOXPYTHON:python3}
passenv = *
#deps = -r{toxinidir}/cirequirements.txt

[testenv:py37]
# TODO: is PY_IGNORE_IMPORTMISMATCH=1 really necessary?
setenv =
    PYTHONPATH={toxinidir}
    PYTHONUNBUFFERED=yes
    PY_IGNORE_IMPORTMISMATCH=1
user_develop = false
# installs dependencies we need for testing
# by using tox the developer don't need to manage this dependencies
# him/herself
deps =
    coverage
    pytest
    pytest-cov
    hypothesis
    testcontainers
# before running the tests erases any prerecord of coverage
commands_pre =
    coverage erase
# execute pytest
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -v --hypothesis-show-statistics {posargs}
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -v --hypothesis-show-statistics {posargs} --doctest-modules src
# after executing the pytest assembles the coverage reports
commands_post = 
    coverage report
    coverage html
    coverage xml

# in previous verions I had independent environments to manage the
# coverage reports. However, I found that doing such as pre and post
# commands facilitates many configuration details

# clones testenev
[testenv:py38]
setenv = {[testenv:py37]setenv}
user_develop = {[testenv:py37]user_develop}
deps = {[testenv:py37]deps}
commands_pre = {[testenv:py37]commands_pre}
commands = {[testenv:py37]commands}
commands_post = {[testenv:py37]commands_post}

# clones testenev
[testenv:py39]
setenv = {[testenv:py37]setenv}
user_develop = {[testenv:py37]user_develop}
deps = {[testenv:py37]deps}
commands_pre = {[testenv:py37]commands_pre}
commands = {[testenv:py37]commands}
commands_post = {[testenv:py37]commands_post}

# clones testenev
[testenv:py310]
setenv = {[testenv:py37]setenv}
user_develop = {[testenv:py37]user_develop}
deps = {[testenv:py37]deps}
commands_pre = {[testenv:py37]commands_pre}
commands = {[testenv:py37]commands}
commands_post = {[testenv:py37]commands_post}

# clones testenev
[testenv:py311]
setenv = {[testenv:py37]setenv}
user_develop = {[testenv:py37]user_develop}
deps = {[testenv:py37]deps}
commands_pre = {[testenv:py37]commands_pre}
commands = {[testenv:py37]commands}
commands_post = {[testenv:py37]commands_post}

# separates lint from build env
[testenv:lint]
deps =
    flake8>=3
    flake8-docstrings
    flake8-bugbear
    pygments
    isort
skip_install = true
commands =
    flake8 {posargs:src tests setup.py docs}
    isort --verbose --check-only --diff src tests setup.py

# confirms changelog was updated after new code additions
# see .bumpversion.cfg and documentation
# https://grafanarmadillo.readthedocs.io/en/latest/contributing.html#update-changelog
[testenv:prreqs]
skip_install = true
commands = python {toxinidir}/devtools/check_changelog.py

# asserts package build integrity
[testenv:build]
# setenv here integrates with commit message in .bumpversion.cfg
# we can tests bump2version with an actual commit
setenv =
    COMMIT_MSG = Test commit message
# dependencies needed for code quality checks
# you need to add here any additional dependencies you might need
deps =
    setuptools
    wheel
    twine
    docutils
    check-manifest
    readme-renderer
    bump2version
skip_install = true
commands_pre = python {toxinidir}/devtools/clean_dist_check.py
commands =
    python --version
    # deprecated
    # python setup.py check --strict --metadata --restructuredtext
    python setup.py sdist bdist_wheel
    twine check dist/*.whl
    twine check dist/*.tar.gz
    check-manifest {toxinidir}
    bump2version --dry-run --verbose --allow-dirty patch
    bump2version --dry-run --verbose --allow-dirty minor
    bump2version --dry-run --verbose --allow-dirty major
commands_post = python {toxinidir}/devtools/clean_dist_check.py

# code quality assessment. This is not a check in the CI, serves just
# as info for the developer
[testenv:radon]
deps = radon
skip_install = true
commands = 
    radon cc -s --total-average --no-assert -nb src/
    radon mi -m -s src/

# Simulate docs building as it will occur on ReadTheDocs
# if this fails, most likely RTD build will fail
[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/devtools/docs_requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs/rst dist/docs
    #sphinx-build -b linkcheck docs dist/docs

# safety checks
[testenv:safety]
deps = safety
skip_install = true
commands = safety check

# my favourite configuration for flake8 styling
# https://flake8.pycqa.org/en/latest/#
[flake8]
max_line_length = 180
hang-closing = true
ignore = 
    W293
    W503
    D412
    D105
    W191
    E133
per-file-ignores = 
    setup.py:E501
    tests/*:D102,D103,D100
docstring-convention = numpy
# normally I exclude init because it is very hard to configure init
# without breaking many rules
exclude = src/sampleproject/__init__.py

# configuration for the isort module
# https://github.com/timothycrosley/isort
[isort]
skip = __init__.py
line_length = 88
indent = tab
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
#known_future_library=future,pies
extra_standard_library=typing_extensions
known_first_party = 
    grafanarmadillo
    usage
    conftest
    tests
# you should add here your known thirdparties, it will facilitate
# the job to isort
known_third_party = 
    hypothesis
    pytest

[tool:pytest]
# If a pytest section is found in one of the possible config files
# (pytest.ini, tox.ini or setup.cfg), then pytest will not look for any others,
# so if you add a pytest config section elsewhere,
# you will need to delete this section from setup.cfg.
#norecursedirs =
#migrations
addopts = -p pytest_cov
python_files =
    test_*.py
    *_test.py
    tests.py
#addopts =
#    -ra
#    --strict
#    --doctest-modules
#    --doctest-glob=\*.rst
#    --tb=short
testpaths =
    tests

